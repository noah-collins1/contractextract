# ContractExtract requirements for .venv-v1 (LangExtract bridge + Pydantic v1)
# This environment provides optional compatibility with legacy LangExtract

# Pydantic v1 for legacy compatibility
pydantic>=1.10.0,<2.0.0

# Core FastAPI for bridge service (older version compatible with Pydantic v1)
fastapi==0.95.*
uvicorn[standard]==0.22.*
starlette>=0.27.0,<0.28.0

# Database connectivity (same as v2 for consistency)
sqlalchemy>=1.4.0,<2.0.0
psycopg2-binary>=2.9.0

# HTTP client for communication
requests>=2.31.0

# PDF processing (same as v2)
pdfplumber>=0.10.0
pypdf>=3.0.0

# YAML processing
pyyaml>=6.0.1

# Date/time handling
python-dateutil>=2.8.2

# Configuration management
python-dotenv>=1.0.0

# Legacy LangExtract dependencies (adjust versions as needed for your setup)
# Note: These are examples - replace with actual LangExtract requirements
numpy>=1.24.0
pandas>=2.0.0
scikit-learn>=1.3.0

# Natural language processing (common in extraction workflows)
nltk>=3.8.0
spacy>=3.6.0
transformers>=4.30.0

# Optional: Text processing utilities
regex>=2023.6.3
beautifulsoup4>=4.12.0
lxml>=4.9.0

# Optional: Machine learning frameworks (if using ML models)
torch>=2.0.0
sentence-transformers>=2.2.0

# Optional: Document processing
python-docx>=0.8.11
openpyxl>=3.1.0

# Testing (optional)
pytest>=7.4.0
pytest-asyncio>=0.21.0

# Utilities
colorama>=0.4.6
tqdm>=4.65.0

# Optional: Enhanced text extraction
textract>=1.6.5
pdfminer.six>=20221105

# Optional: OCR capabilities
pytesseract>=0.3.10
# Pillow>=10.0.0  # For image processing

# Optional: Advanced NLP
# spacy-transformers>=1.2.0
# datasets>=2.14.0

# Optional: LLM integration (if using local models)
# ollama>=0.1.0
# langchain>=0.1.0

# Security and encoding
cryptography>=41.0.0
chardet>=5.2.0

# HTTP server utilities
python-multipart>=0.0.6

# Logging
structlog>=23.0.0

# Note: Add specific LangExtract dependencies here based on your actual implementation
# This is a template - customize based on your LangExtract service requirements